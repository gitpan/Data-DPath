2010-04-07  Steffen Schwigon  <ss5@renormalist.net>

	* v0.35

	* Bummer! Fixed stupid perl version checking in tests.

2010-03-27  Steffen Schwigon  <ss5@vinyl.webit.de>

	* v0.34

	* solve some CPAN testing issues

2010-03-24  Steffen Schwigon  <ss5@renormalist.net>

	* v0.33

	* Fix regression that sneaked in with the //KEY-look-ahead
	optimization

	* testsuite maintenance

	* documentation maintenance
	- comparison with Data::Path reworked
	- more verbose array semantics described

2009-09-25  Steffen Schwigon  <ss5@renormalist.net>

	* v0.32

	* I cannot believe that I forgot to define the dependency to
	Text::Balanced! Let's see if this fixes some FAIL reports.

2009-09-22  Steffen Schwigon  <ss5@renormalist.net>

	* v0.31

	* fix docs and changelog of 0.30 which appeared rather incomplete

2009-09-22  Steffen Schwigon  <ss5@renormalist.net>

	* v0.30

	* Yet more speed optimizations:
	- switch from Object::Tiny::RW to Class::XSAccessor::Array
	- try fast ref() before falling back to slower reftype()
	- use constants

	* We are now at 3.2sec runtime for my benchmark, compared to
	original 65sec v0.17, so we are now 20 times faster.

	* Backported code to Perl 5.8

	* Enable 5.10 features by default if Perl >= 5.10 available
	- in particular the overloading of the smartmatch '~~' operator
	- cloned and backported large parts of the test suite to only
	use 5.8 features and skip 5.10 specific suite on 5.8
	- drop some redundant test scripts

	* INCOMPATIBLE CHANGE:
	Filter functions are now hard prototyped, no more behaviour
	depending on optional params. You now have to use explicit
	check functions for this, like this:
	- //ZOMTEC[ reftype eq "Foo::Bar"  ]   # reftype just returns value
	- //ZOMTEC[ is_reftype("Foo::Bar") ]   # is_reftype checks against arg

2009-09-17  Steffen Schwigon  <ss5@renormalist.net>

	* v0.21

	* even more aggressive speed optimizations:

	* dropped Moose and MX::Declare completely in favor of
	Object::Tiny::RW and classical old school subs

	* cleaned up dirty code by partially using
	- no strict 'refs'
	- no warnings 'uninitialized'

	* the overall speed improvement for my "xt/large_data.t"
	benchmark is an improved runtime from originally
	- 65s   (v0.17) to
	-  4.2s (v0.21)
	on my netbook. Yes, 15 times faster.

	* thanks to Devel::NYTProf which helped a lot profiling this

2009-09-16  Steffen Schwigon  <ss5@renormalist.net>

	* v0.20

	* aggressive speed optimizations, needed @ work:

	* the ANYSTEP "//" not looks ahead to the following step and
	reduces the intermediate point sets if it is a hash key, like in
	"//AFFE"

	* remove Moose type constraints

	* more array references instead of arrays

	* partially this led to more dirty code, I try to fix this later

2009-08-11  Steffen Schwigon  <ss5@renormalist.net>

	* v0.17

	* understand even more strange perl'oid filter expressions by
	using extract_codeblock instead of extract_bracketed

	* tests for this

2009-08-11  Steffen Schwigon  <ss5@renormalist.net>

	* v0.16

	* filter expressions can now contain slashes (just as you would
	naturally expect)

2009-08-11  Steffen Schwigon  <ss5@renormalist.net>

	* v0.15

	* fix semantics of filter function key(). It now provides the key
	under which the value is associated.

	* many more and fixed tests

	* doc cleanups and fixes

	* moved distro and development tests under xt/

2009-07-14  Steffen Schwigon  <ss5@renormalist.net>

	* v0.14

	* The overloaded smartmatch "~~" does not work commutative anymore
	in bleadperl and Perl 5.10.1.

	* cleanup for bleadperl smartmatch warnings with undefined $_

	* minor additions to the comparison section

2009-07-14  Steffen Schwigon  <ss5@renormalist.net>

	* v0.13

	* comparison matrix Data::DPath vs. Data::Path, requested in
	RT#47540, http://rt.cpan.org/Public/Bug/Display.html?id=47540

2009-06-26  Steffen Schwigon  <ss5@renormalist.net>

	* v0.12

	* allow returning references into original data structure via new
	frontend function "dpathr" instead of "dpath"

2009-05-15  Steffen Schwigon  <ss5@renormalist.net>

	* v0.11

	* Dependencies raised to current MooseX stuff

2009-04-16  Steffen Schwigon  <ss5@renormalist.net>

	* v0.10

	* fix forgotten "use" for standalone using of ::Path

	* new path step: nostep "." (for filter chaining and on difficult
	elements, like root node)

	* documentation improvements

2009-02-12  Steffen Schwigon  <ss5@renormalist.net>

	* v0.09

	* Quoted special chars ("*", "//", "..") now work as keys

	* compatibility with newest MooseX::Method::Signatures on class
	methods [Florian Ragwitz]

2009-02-11  Steffen Schwigon  <ss5@renormalist.net>

	* v0.08

	* Fix missing dependency to Test::Deep. Thanks, CPAN testers.

	* v0.07

	* use Scalar::Util::reftype instead of ref. This enables blessed
	data structures to work.

	* Provide "reftype" and "isa" as filter functions.

	* v0.06

	* "package" statements to help the CPAN indexer.

2009-02-10  Steffen Schwigon  <ss5@renormalist.net>

	* v0.05

	* more docs

	* tests for negative array indexes

2009-02-10  Steffen Schwigon  <ss5@renormalist.net>

	* v0.04

	* Fix $VERSION inside MoosX::Declare'd class not recognized by
	CPAN indexer

2009-02-09  Steffen Schwigon  <ss5@renormalist.net>

	* v0.03

	* The first useful release, see test suite for many examples!

	* much improved path tokenizer

	* new path steps: parent "..", anywhere "//", anystep "*"

	* implemented filter conditions (in brackets after path step)

	* filter condition type "just index": *[1]

	* filter condition type "eval": *[idx == 3], *[ key =~ m(foo) ]

	* cleaner semantics for STEP[filter] vs. STEP/*[filter]

	* cleaner semantics for combinations of "//", "..", "*", and filters

	* provide filter functions: size, idx, key, value

	* many more tests

	* more clean export behaviour [rafl++]

	* uniq results if found via multiple ways

	* overloaded '~~' smartmatch

	* switch to Module::Install

	* tests do not depend on result order

2008-11-26  Steffen Schwigon  <ss5@renormalist.net>

	* v0.01

	* initial CPAN version

	* basic paths, parents, placeholders


